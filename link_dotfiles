#!/bin/bash
#TODO: in first run, .vimrc is not linked because .vim is not created yet. Need to enforce order somehow...
#TODO: fix for MacOSX: arrays are not working properly
echo "Welcome to $0. This script will create links on this computer to the configuration data in ~/Personal/config such that config can be synced."
shopt -s nullglob #if a filename pattern matches no files, don't use the pattern itself, just return null
shopt -s dotglob  #match hidden files (starting with a dot) also

set -e

ln="ln -svfT"
cp="cp -v"
# Detect the platform (similar to $OSTYPE)
# and set any specific commands required
OS='unknown'
case $(uname) in
  'Linux')
    OS='Linux'
    ;;
  'FreeBSD')
    OS='FreeBSD'
    ;;
  'WindowsNT')
    OS='Windows'
    ;;
  'Darwin') 
    OS='MacOS'
    #MacOS - ln doesn't have a -T option
    ln="ln -svfF"
    cp="gcp -v"
    ;;
  'SunOS')
    OS='Solaris'
    ;;
  'AIX') ;;
  *) ;;
esac
echo "Operating on $OS"


#NB: for xmodmap: a file named .Xmodmap in ~ will automatically by run by xinit.

#These are the targets to be created by symbolic links to the Personal/config directory
#TODO: convert to associative array
targets="$HOME/.htoprc $HOME/.Xmodmap $HOME/.Xresources $HOME/.config/awesome/rc.lua $HOME/.config/awesome/theme.lua $HOME/.bash_aliases $HOME/.bashrc $HOME/.inputrc $HOME/.zshrc $HOME/.vim $HOME/.vimrc $HOME/.mc/ini $HOME/.mc/panels.ini $HOME/.mc/bindings $HOME/.aliases $HOME/.ipython/profile_default/ipython_config.py $HOME/.ipython/profile_default/startup/ipy_user_focus.py $HOME/.subversion/config $HOME/.subversion/servers $HOME/.config/inkscape/keys/default.xml $HOME/.filezilla/filezilla.xml $HOME/.filezilla/sitemanager.xml $HOME/.config/fish"

#batchSources are directories of files that should all be linked, separately as files, from the sourceDir
if [ $OS == 'MacOS' ]; then
	declare -a batchSources
else
	declare -A batchSources
fi

#create the muiltools arch directories
if [ -x make_arch_dirs ]; then
	. ./make_arch_dirs
fi

#link the muiltools bin to allow it to be part of PATH
#$ln ~/usr/muiltools/bin ~/usr/bin #eep that looks dangerous or at least won't usually work...


# DOESNT WORK WITH MACOS
if [ X$OS == "XMacOS" ]; then
	echo "not doing batchSources on macos..."
else
	batchSources["$HOME/usr/local/Umlet/palettes"]="$HOME/Personal/config/umlet/palettes"
	batchSources["$HOME/.config/awesome/revelation"]="$HOME/Personal/config/awesome/revelation"
	for targetDir in ${!batchSources[@]}; do
		srcDir=${batchSources[${targetDir}]}
		echo "${srcDir} -> ${targetDir}"
		#if the source doesn't exist or is not a directory, ignore it
		if [ ! -d ${srcDir} ]; then
			continue
		fi

		if [ ! -d ${targetDir} ]; then
			mkdir -p ${targetDir}
		fi

		for src in ${srcDir}/*; do
			srcName=$(basename "${src}")
			target=${targetDir}/${srcName}
			if [ -z "${target}" ]; then
				echo burp
				continue
			fi
			if [ -e "${target}" -a ! -L "${target}" ]; then #exists
				backupDir=${targetDir}/.backup
				if [ ! -d "$backupDir" ]; then
					mkdir -p "$backupDir"
				fi
				$cp -r --backup=numbered "${target}" "$backupDir/"
			fi
			$ln "${src}" "${target}"
		done
	done
fi

backupDir=$HOME/.backup

if [ ! -d $backupDir ]; then
	mkdir -p $backupDir
fi

for f in $targets; do
	if [ -f "$f" ]; then
		$cp --backup=numbered "$f" $backupDir
	fi
	if [ -d "$f" ]; then
		$cp --backup=numbered -r "$f" $backupDir/
	fi
	ff=`basename "$f"`
	case $ff in
		.gitconfig ) sourceDir="$HOME/Personal/config/git";;
		ipy* ) sourceDir="$HOME/Personal/config/ipython";;
		filezilla.xml | sitemanager.xml ) sourceDir="$HOME/Personal/config/filezilla";;
		rc.lua | theme.lua) sourceDir="$HOME/Personal/config/awesome";;
		.htoprc ) sourceDir="$HOME/Personal/config/htop";;
		.bash* | .profile | .inputrc) sourceDir="$HOME/Personal/config/bash";;
		.aliases ) sourceDir="$HOME/Personal/config";;
		.zsh* ) sourceDir="$HOME/Personal/config/zsh";;
		.vim ) sourceDir="$HOME/Personal/config/vim";;
		.vimrc ) sourceDir="$HOME/.vim";;
		bindings | ini | panels.ini) sourceDir="$HOME/Personal/config/midnightcommander";;
		.Xmodmap ) sourceDir="$HOME/Personal/config/X";;
		.Xresources ) sourceDir="$HOME/Personal/config/X";;
		servers | config ) sourceDir="$HOME/Personal/config/subversion";;
		default.xml ) sourceDir="$HOME/Personal/config/inkscape/keys";;
		*) sourceDir="$HOME/Personal/config";;
	esac
	sourceFile=$sourceDir/$ff
	if [ X$ff == "X.vim" ]; then
		sourceFile="$sourceDir/vimfiles"
	elif [ ! -e $sourceFile ]; then
		echo "Error: cannot locate source file '$sourceFile' of target '$f'... skipping."
		continue
	fi
	targetDir=`dirname "$f"`
	if [ ! -d "$targetDir" ]; then
		mkdir -p "$targetDir"
	fi
	$ln $sourceFile "$f"
done

echo $0 finished.
